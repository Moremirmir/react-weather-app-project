{"ast":null,"code":"var _jsxFileName = \"/Users/Miriam/Desktop/react-weather-app-project/src/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport axios from \"axios\";\nimport \"./Weather.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather(props) {\n  _s();\n\n  const [weatherData, setWeatherData] = useState({\n    ready: false\n  });\n  const [city, setCity] = useState(props.defaultCity);\n\n  function handleResponse(response) {\n    console.log(response.data);\n    setWeatherData({\n      ready: true,\n      temperature: response.data.main.temp,\n      humidity: response.data.main.humidity,\n      wind: response.data.wind.speed,\n      city: response.data.name,\n      description: response.data.weather[0].description,\n      date: new Date(response.data.dt * 1000),\n      icon: response.data.weather[0].icon\n    });\n  }\n\n  function search() {\n    let apiKey = \"5ac1c44bb493079f7099bb5515307992\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search(city);\n  }\n\n  function handleCityChange(event) {\n    setCity(event.target.value);\n  }\n\n  if (weatherData.ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-9\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"search\",\n              placeholder: \"Enter a city..\",\n              className: \"form-control\",\n              autoFocus: \"on\",\n              onChange: handleCityChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"search\",\n              className: \"btn btn-primary w-100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherInfo, {\n        data: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  } else {\n    search();\n    return \"Loading...\";\n  }\n}\n\n_s(Weather, \"dsaBKiCPm9xAtefQhlJvmvwFSHU=\");\n\n_c = Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","WeatherInfo","axios","Weather","props","weatherData","setWeatherData","ready","city","setCity","defaultCity","handleResponse","response","console","log","data","temperature","main","temp","humidity","wind","speed","name","description","weather","date","Date","dt","icon","search","apiKey","apiUrl","get","then","handleSubmit","event","preventDefault","handleCityChange","target","value"],"sources":["/Users/Miriam/Desktop/react-weather-app-project/src/Weather.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport axios from \"axios\";\nimport \"./Weather.css\";\n\nexport default function Weather(props) {\n  const [weatherData, setWeatherData] = useState({ ready: false });\n  const [city, setCity] = useState(props.defaultCity);\n  function handleResponse(response) {\n    console.log(response.data);\n    setWeatherData({\n      ready: true,\n      temperature: response.data.main.temp,\n      humidity: response.data.main.humidity,\n      wind: response.data.wind.speed,\n      city: response.data.name,\n      description: response.data.weather[0].description,\n      date: new Date(response.data.dt * 1000),\n      icon: response.data.weather[0].icon,\n    });\n  }\n  function search() {\n    let apiKey = \"5ac1c44bb493079f7099bb5515307992\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search(city);\n  }\n  function handleCityChange(event) {\n    setCity(event.target.value);\n  }\n\n  if (weatherData.ready) {\n    return (\n      <div className=\"Weather\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"row\">\n            <div className=\"col-9\">\n              <input\n                type=\"search\"\n                placeholder=\"Enter a city..\"\n                className=\"form-control\"\n                autoFocus=\"on\"\n                onChange={handleCityChange}\n              />\n            </div>\n            <div className=\"col-3\">\n              <input\n                type=\"submit\"\n                value=\"search\"\n                className=\"btn btn-primary w-100\"\n              />\n            </div>\n          </div>\n        </form>\n        <WeatherInfo data={weatherData} />\n      </div>\n    );\n  } else {\n    search();\n    return \"Loading...\";\n  }\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;EAAA;;EACrC,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC;IAAEO,KAAK,EAAE;EAAT,CAAD,CAA9C;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACI,KAAK,CAACM,WAAP,CAAhC;;EACA,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;IAChCC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;IACAT,cAAc,CAAC;MACbC,KAAK,EAAE,IADM;MAEbS,WAAW,EAAEJ,QAAQ,CAACG,IAAT,CAAcE,IAAd,CAAmBC,IAFnB;MAGbC,QAAQ,EAAEP,QAAQ,CAACG,IAAT,CAAcE,IAAd,CAAmBE,QAHhB;MAIbC,IAAI,EAAER,QAAQ,CAACG,IAAT,CAAcK,IAAd,CAAmBC,KAJZ;MAKbb,IAAI,EAAEI,QAAQ,CAACG,IAAT,CAAcO,IALP;MAMbC,WAAW,EAAEX,QAAQ,CAACG,IAAT,CAAcS,OAAd,CAAsB,CAAtB,EAAyBD,WANzB;MAObE,IAAI,EAAE,IAAIC,IAAJ,CAASd,QAAQ,CAACG,IAAT,CAAcY,EAAd,GAAmB,IAA5B,CAPO;MAQbC,IAAI,EAAEhB,QAAQ,CAACG,IAAT,CAAcS,OAAd,CAAsB,CAAtB,EAAyBI;IARlB,CAAD,CAAd;EAUD;;EACD,SAASC,MAAT,GAAkB;IAChB,IAAIC,MAAM,GAAG,kCAAb;IACA,IAAIC,MAAM,GAAI,qDAAoDvB,IAAK,UAASsB,MAAO,eAAvF;IACA5B,KAAK,CAAC8B,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBtB,cAAvB;EACD;;EAED,SAASuB,YAAT,CAAsBC,KAAtB,EAA6B;IAC3BA,KAAK,CAACC,cAAN;IACAP,MAAM,CAACrB,IAAD,CAAN;EACD;;EACD,SAAS6B,gBAAT,CAA0BF,KAA1B,EAAiC;IAC/B1B,OAAO,CAAC0B,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAP;EACD;;EAED,IAAIlC,WAAW,CAACE,KAAhB,EAAuB;IACrB,oBACE;MAAK,SAAS,EAAC,SAAf;MAAA,wBACE;QAAM,QAAQ,EAAE2B,YAAhB;QAAA,uBACE;UAAK,SAAS,EAAC,KAAf;UAAA,wBACE;YAAK,SAAS,EAAC,OAAf;YAAA,uBACE;cACE,IAAI,EAAC,QADP;cAEE,WAAW,EAAC,gBAFd;cAGE,SAAS,EAAC,cAHZ;cAIE,SAAS,EAAC,IAJZ;cAKE,QAAQ,EAAEG;YALZ;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QADF,eAUE;YAAK,SAAS,EAAC,OAAf;YAAA,uBACE;cACE,IAAI,EAAC,QADP;cAEE,KAAK,EAAC,QAFR;cAGE,SAAS,EAAC;YAHZ;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QAVF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAqBE,QAAC,WAAD;QAAa,IAAI,EAAEhC;MAAnB;QAAA;QAAA;QAAA;MAAA,QArBF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAyBD,CA1BD,MA0BO;IACLwB,MAAM;IACN,OAAO,YAAP;EACD;AACF;;GA5DuB1B,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}